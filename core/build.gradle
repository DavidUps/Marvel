plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

def apikeysPropertiesFile = rootProject.file("apikeys.properties")
def apikeysProperties = new Properties()
apikeysProperties.load(new FileInputStream(apikeysPropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    flavorDimensions "enviroment"
    productFlavors {
        Preproduction {
            dimension "enviroment"
            buildConfigField "String", "ENVIRONMENT", "\"PRE\""
            buildConfigField "String", "DATA_BASE", "\"PRE-MARVEL\""
            buildConfigField "String", "BASE_URL", "https://gateway.marvel.com/v1/public/"
            buildConfigField "String", "MARVEL_API_PUBLIC_KEY", apikeysProperties["PUBLIC_KEY"]
            buildConfigField "String", "MARVEL_API_PRIVATE_KEY", apikeysProperties["PRIVATE_KEY"]
        }

        Production {
            dimension "enviroment"
            buildConfigField "String", "ENVIRONMENT", "\"PRO\""
            buildConfigField "String", "DATA_BASE", "\"PRO-MARVEL\""
            buildConfigField "String", "BASE_URL", "https://gateway.marvel.com/v1/public/"
            buildConfigField "String", "MARVEL_API_PUBLIC_KEY", apikeysProperties["PUBLIC_KEY"]
            buildConfigField "String", "MARVEL_API_PRIVATE_KEY", apikeysProperties["PRIVATE_KEY"]
        }
    }
}

dependencies {

    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'androidx.core:core-ktx:1.3.2'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.google.android.material:material:1.3.0'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    api 'androidx.lifecycle:lifecycle-common-java8:2.3.1'
    api 'androidx.preference:preference-ktx:1.1.1'
    api 'android.arch.work:work-runtime:1.0.1'
    api 'androidx.recyclerview:recyclerview:1.2.0'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    api 'com.android.support.constraint:constraint-layout:2.0.4'
    api 'androidx.databinding:viewbinding:4.2.0'
    api 'androidx.biometric:biometric:1.1.0'
    // Retrofit
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    // Koin
    api 'org.koin:koin-android:2.2.0'
    api 'org.koin:koin-android-viewmodel:2.2.0'
    api 'org.koin:koin-android-scope:2.2.0'
    // Glide
    api 'com.github.bumptech.glide:glide:4.12.0'
    // Unit Testing
    testImplementation 'junit:junit:4.12'
    testImplementation "com.nhaarman:mockito-kotlin:1.4.0"
    testImplementation 'org.mockito:mockito-core:3.0.0'
    testImplementation "io.kotlintest:kotlintest:2.0.7"
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.0"
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'org.amshove.kluent:kluent-android:1.53'
    implementation 'androidx.databinding:viewbinding:3.6.3'
}